@using MultilEcommer.Areas.Blog.Models
@model IEnumerable<MultilEcommer.Areas.Blog.Models.Category>

@{
    ViewData["Title"] = "Chuyên mục Blog";
}
<partial name="_StatusMessage"/>
<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">Tạo danh mục Blog mới</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
           await RenderCategories(item, 0);
        }
    </tbody>
</table>

@{
    async Task RenderCategories(Category item, int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",level));
         <tr>
                <td>
                    @Html.Raw(prefix) 
                    <a asp-action="Edit" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Xem</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Xóa</a>
                </td>
            </tr>
            if(item.CategoryChildren?.Count > 0)
            {
                foreach(var cCategory in item.CategoryChildren)
                {
                    await RenderCategories(cCategory, level + 1);
                }
            }
    }
}